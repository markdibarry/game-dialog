{
  "SpeakerIds": [
    "Devs"
  ],
  "Floats": [
    0.5,
    2,
    -1,
    -2
  ],
  "Strings": [
    "HelloWorld",
    "Examples",
    "Hello world! Thanks for trying out our dialog system!",
    "What feature would you like to see an example of?",
    "prompt",
    "Adding a \\[prompt\\] tag adds a prompt[7] after[8] every[9] word.",
    "page",
    "Even though this is a single dialog line, when it hits a \\[page\\] tag...\n[11]...it\u0027ll scroll the current line to a new page to read the rest!",
    "goto",
    "The name of this section is \u0022Examples\u0022. \\[goto Examples\\] will return you to the beginning of the section. Let\u0027s go!",
    "speed",
    "This text will be read at regular speed.",
    "[15]This will be read at half speed because of the tag \\[speed=0.5\\].",
    "[17]And this will be read at double speed due to a tag of \\[speed=2\\]!",
    "pause",
    "This text inserts a pause here[19] then continues on!",
    "auto",
    "If you add an \u0022auto\u0022 tag to the end of a line, it will automatically proceed after a pause.",
    "This line ends with \\[auto=2\\].[22]",
    "You can also set an \u0022auto\u0022 tag on its own line. This will make all lines auto-proceed until you turn it off.",
    "We just turned it on and didn\u0027t set a pause time (\\[auto\\]) so it\u0027ll auto proceed based on the length of the line.",
    "This will also auto-proceed. ",
    "\\[/auto\\] closes the tag, so you\u0027ll need to proceed manually from here!",
    "await",
    "Flash",
    "In Dialog.DialogBridge we created a custom method, Flash(), that modulates the test scene. Internally, it\u0027s handled asynchronously (Take a look!). You can wait for it to finish before continuing writing by writing \\[await Flash()\\][30], or if you don\u0027t want to wait, simply call the method name like so: \\[Flash()\\][31]. Cool, right?",
    "end",
    "\\[end\\] ends the script. Goodbye!"
  ],
  "Instructions": [
    [
      1,
      3,
      0
    ],
    [
      1,
      4,
      1
    ],
    [
      2
    ],
    [
      3,
      1,
      1,
      0,
      2
    ],
    [
      3,
      5,
      1,
      0,
      3
    ],
    [
      6,
      1,
      6,
      4,
      1,
      10,
      6,
      1,
      12,
      8,
      1,
      13,
      10,
      1,
      18,
      14,
      1,
      20,
      16,
      1,
      29,
      23,
      1,
      32,
      26
    ],
    [
      3,
      2,
      1,
      0,
      5
    ],
    [
      4,
      0,
      28
    ],
    [
      4,
      0,
      28
    ],
    [
      4,
      0,
      28
    ],
    [
      3,
      2,
      1,
      0,
      7
    ],
    [
      4,
      0,
      29
    ],
    [
      3,
      1,
      1,
      0,
      9
    ],
    [
      3,
      14,
      1,
      0,
      11
    ],
    [
      3,
      16,
      1,
      0,
      12
    ],
    [
      4,
      0,
      26,
      0
    ],
    [
      3,
      2,
      1,
      0,
      13
    ],
    [
      4,
      0,
      26,
      1
    ],
    [
      3,
      2,
      1,
      0,
      15
    ],
    [
      4,
      0,
      27,
      1
    ],
    [
      3,
      21,
      1,
      0,
      17
    ],
    [
      3,
      23,
      1,
      0,
      18
    ],
    [
      4,
      0,
      24,
      1
    ],
    [
      3,
      24,
      1,
      0,
      19
    ],
    [
      4,
      25,
      24,
      2
    ],
    [
      3,
      26,
      1,
      0,
      20
    ],
    [
      3,
      27,
      1,
      0,
      21
    ],
    [
      4,
      28,
      24,
      3
    ],
    [
      3,
      2,
      1,
      0,
      22
    ],
    [
      3,
      2,
      1,
      0,
      25
    ],
    [
      4,
      0,
      5,
      24,
      1,
      0
    ],
    [
      4,
      0,
      5,
      24,
      0,
      0
    ],
    [
      3,
      2,
      1,
      0,
      27
    ]
  ]
}